<?xml version="1.0"?>
<RBProject version="2010r2">
<block type="Module" ID="260297370">
 <ObjName>LinearCLArgumentKFS</ObjName>
 <ObjContainerID>687429512</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AddFlags</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddFlags(newFlags As String)</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Adds the given flags to the flags already here.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Flags = Flags + newFlags</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newFlags As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AddSwitches</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddSwitches(ParamArray newSwitches As String)</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Adds the given switches to the switches already here.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>AddSwitches newSwitches</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ParamArray newSwitches As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AddSwitches</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddSwitches(newSwitches() As String)</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Adds the given switches to the switches already here.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each switch As String In newSwitches</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Switches.IndexOf( switch ) = -1 Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Switches.Append switch</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newSwitches() As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HasFlag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasFlag(flag As String) As Boolean</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns whether or not this argument has the given flag.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Flags.InStrB( flag.Left(1) ) &gt; 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>flag As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>HasSwitch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasSwitch(switch As String) As Boolean</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns whether or not this argument has the given switch.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Switches.IndexOf( switch ) &gt; -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>switch As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetMostRelevantParcel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMostRelevantParcel() As String</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns the last non-blank parcel.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For index As Integer = myParcels.Ubound DownTo 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myParcels( index ) &lt;&gt; "" Then Return myParcels( index )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetParcelCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetParcelCount() As Integer</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns number of parcels currently found.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim count As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For index As Integer = myParcels.Ubound DownTo 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myParcels( index ) &lt;&gt; "" Then count = count + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return count</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>GetParcels</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetParcels() As String()</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns the parcels currently found.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result( -1 ) As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For index As Integer = myParcels.Ubound DownTo 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myParcels( index ) &lt;&gt; "" Then result.Insert 0, myParcels( index )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Method>
  <ItemName>GetRelevantParcels</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetRelevantParcels() As String()</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns only the relevant parcels.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result( -1 ) As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For index As Integer = myParcels.Ubound DownTo 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Not IsArray Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If result.Ubound = 0 Then Return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf Not IsUnbounded Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If result.Ubound = ParcelCount -1 Then Return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myParcels( index ) &lt;&gt; "" Then result.Insert 0, myParcels( index )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTriggerCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTriggerCount() As Integer</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Returns number of times this argument was triggered.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim count As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For index As Integer = myParcels.Ubound DownTo 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myParcels( index ) = "" Then count = count + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return count</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>FoundTrigger</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub FoundTrigger(ByRef parcelQueue() As String, myID As String)</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Somebody found a flag or switch that triggers this argument.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myParcels.Append ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For counter As Integer = ParcelCount DownTo 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>parcelQueue.Append myID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ByRef parcelQueue() As String, myID As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FoundParcel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub FoundParcel(parcel As String)</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Somebody found a parcel.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myParcels.Append parcel</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>parcel As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Created 1/3/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Basic Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Flags = ""</SourceLine>
   <SourceLine>IsArray = False</SourceLine>
   <SourceLine>IsTerminal = False</SourceLine>
   <SourceLine>IsUnbounded = False</SourceLine>
   <SourceLine>ReDim myParcels( -1 )</SourceLine>
   <SourceLine>Name = ""</SourceLine>
   <SourceLine>ParcelCount = 0</SourceLine>
   <SourceLine>ReDim Switches( -1 )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Flags</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Flags As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Flags As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>Switches()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Switches() As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Switches() As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>IsUnbounded</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsUnbounded As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsUnbounded As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>IsArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsArray As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsArray As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Name As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Name As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>ParcelCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ParcelCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ParcelCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>myParcels()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myParcels() As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myParcels() As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>IsTerminal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsTerminal As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsTerminal As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Flags</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsUnbounded</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsArray</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ParcelCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsTerminal</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
