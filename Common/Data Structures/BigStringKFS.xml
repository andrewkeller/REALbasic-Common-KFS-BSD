<?xml version="1.0"?>
<RBProject version="2009r5.1">
<block type="Module" ID="628388742">
 <ObjName>BigStringKFS</ObjName>
 <ObjContainerID>835872183</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>GetDataSourceSummary</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDataSourceSummary(includeErrorMsgs As Boolean = True) As String</SourceLine>
   <SourceLine>// Returns a description of where</SourceLine>
   <SourceLine>// the data in this string comes from.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 4/29/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Rewritten 12/25/2009 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Also note: if includeErrorMsgs is True, then</SourceLine>
   <SourceLine>// non-computer-readable strings can be returned,</SourceLine>
   <SourceLine>// such as "Loaded in Memory".</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem.Exists Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mySwapFolderitem.ShellPathKFS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return kDataSourceMissing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myOriginalFolderitem.Exists Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return myOriginalFolderitem.ShellPathKFS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return kDataSourceMissing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return myUserEnteredPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf includeErrorMsgs Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return kDataSourceMemory</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>includeErrorMsgs As Boolean = True</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Basic Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 4/29/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Rewritten 12/25/2009 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>// Make sure all the data is freed.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 4/29/2008 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Clear()</SourceLine>
   <SourceLine>// Destroys all the string data and reinitializes this instance.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 4/29/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Modified 12/25/2009 --;</SourceLine>
   <SourceLine>// Modified 1/8/2010 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>FileTextEncoding = Nil</SourceLine>
   <SourceLine>iErrCode = 0</SourceLine>
   <SourceLine>myOriginalFolderitem = Nil</SourceLine>
   <SourceLine>myStringCopy = ""</SourceLine>
   <SourceLine>myUserEnteredPath = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReleaseSwapFile mySwapFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mySwapFolderitem = Nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Consolidate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Consolidate()</SourceLine>
   <SourceLine>// Releases the dependency on OriginalFolderitem, if it is currently active.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 5/28/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Rewritten 12/25/2009 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine>If myOriginalFolderitem.Exists Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim bs As BinaryStream = BinaryStream.Open( myOriginalFolderitem )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If bs &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = bs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>bs.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetDataStream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDataStream() As BinaryStream</SourceLine>
   <SourceLine>// Returns a BinaryStream set to read the data in this instance.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Note: There are legitimate non-error cases</SourceLine>
   <SourceLine>// where this function may return Nil.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As BinaryStream = Nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine>If mySwapFolderitem.Exists Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = BinaryStream.Open( mySwapFolderitem )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine>If myOriginalFolderitem.Exists Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = BinaryStream.Open( myOriginalFolderitem )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath = "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = New BinaryStream( myStringCopy )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>BinaryStream</ItemResult>
 </Method>
 <Method>
  <ItemName>StringDataCanBeAccessed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringDataCanBeAccessed() As Boolean</SourceLine>
   <SourceLine>// Returns whether or not the contents of this</SourceLine>
   <SourceLine>// instance can be accessed.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 6/9/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Rewritten 12/25/2009 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem.Exists Then</SourceLine>
   <SourceLine>If mySwapFolderitem.IsReadable Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>iErrCode = kErrCodeDoesntExist</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myOriginalFolderitem.Exists Then</SourceLine>
   <SourceLine>If myOriginalFolderitem.IsReadable Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>iErrCode = kErrCodeDoesntExist</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>iErrCode = kErrCodeAbstractFile</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>UserEnteredPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UserEnteredPath() As String</SourceLine>
   <SourceLine>// Returns the current UserEnteredPath.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return myUserEnteredPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Operator_Convert(other As String)</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Constructor other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Operator_Convert(other As FolderItem)</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Constructor other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(other As BigStringKFS)</SourceLine>
   <SourceLine>// Standard Convert Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As BigStringKFS</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Length</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Length() As UInt64</SourceLine>
   <SourceLine>// Returns the length of the data in this class.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Note that a length of zero *may* have been an error,</SourceLine>
   <SourceLine>// So also check the last error code.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim data As BinaryStream = GetDataStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If data = Nil Then Return 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return data.Length</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>UInt64</ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringValue() As String</SourceLine>
   <SourceLine>// Returns the string value of this instance.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim data As BinaryStream = GetDataStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If data &lt;&gt; Nil Then Return data.Read( data.Length, FileTextEncoding )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub StringValue(Assigns newValue As String)</SourceLine>
   <SourceLine>// Sets the value of this class to the data</SourceLine>
   <SourceLine>// contained in the given String.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2008 by Andrew Keller</SourceLine>
   <SourceLine>// Modified 1/8/2010 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If newValue.Len &lt; kSwapThreshold Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myStringCopy = newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mySwapFolderitem = AcquireSwapFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim outStream As BinaryStream</SourceLine>
   <SourceLine>outStream = BinaryStream.Create( mySwapFolderitem, True )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Write newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Length = newValue.Len</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub StringValue(Assigns newValue As BinaryStream)</SourceLine>
   <SourceLine>// Sets the value of this class to the data</SourceLine>
   <SourceLine>// contained in the given BinaryStream.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2008 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = newValue.Read( newValue.Length, FileTextEncoding )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As BinaryStream</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub StringValue(Assigns newValue As MemoryBlock)</SourceLine>
   <SourceLine>// Sets the value of this class to the data</SourceLine>
   <SourceLine>// contained in the given MemoryBlock.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2008 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim temp As String = newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = temp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub StringValue(Assigns newValue As BigStringKFS)</SourceLine>
   <SourceLine>// Sets the value of this class to the data</SourceLine>
   <SourceLine>// contained in the given BigStringKFS.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2008 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If newValue.myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myOriginalFolderitem = newValue.myOriginalFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf newValue.UserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myUserEnteredPath = newValue.UserEnteredPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = newValue.GetDataStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As BigStringKFS</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(other As MemoryBlock)</SourceLine>
   <SourceLine>// Standard Convert Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(other As String)</SourceLine>
   <SourceLine>// Standard Convert Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(other As BinaryStream)</SourceLine>
   <SourceLine>// Standard Convert Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As BinaryStream</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Operator_Convert(other As BinaryStream)</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Constructor other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As BinaryStream</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Operator_Convert(other As MemoryBlock)</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Constructor other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(other As FolderItem, autoConsolidate As Boolean = False)</SourceLine>
   <SourceLine>// Standard Convert Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine>// Modified 1/13/2010 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = other</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If autoConsolidate Then Consolidate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>other As FolderItem, autoConsolidate As Boolean = False</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub StringValue(Assigns newValue As FolderItem)</SourceLine>
   <SourceLine>// Sets the value of this class to the data</SourceLine>
   <SourceLine>// contained in the given FolderItem.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2008 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myOriginalFolderitem = newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UserEnteredPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UserEnteredPath(Assigns newValue As String)</SourceLine>
   <SourceLine>// Sets the contents of this string to an abstract file path.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myUserEnteredPath = newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>Assigns newValue As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ModifyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ModifyValue(newValue As String)</SourceLine>
   <SourceLine>// Grabs the current data stream, and overwrites</SourceLine>
   <SourceLine>// it with the data in the given String.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This function tries as hard as it can to</SourceLine>
   <SourceLine>// do this operation ByRef, but the String</SourceLine>
   <SourceLine>// class is not desireable for ByRef logic,</SourceLine>
   <SourceLine>// so passing a new value as a String</SourceLine>
   <SourceLine>// operates using ByVal logic.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue New BinaryStream( newValue )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newValue As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ModifyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ModifyValue(newValue As BigStringKFS)</SourceLine>
   <SourceLine>// Grabs the current data stream, and overwrites</SourceLine>
   <SourceLine>// it with the data in the given BigStringKFS.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This function tries as hard as it can to</SourceLine>
   <SourceLine>// do this operation ByRef, but the String</SourceLine>
   <SourceLine>// class is not desireable for ByRef logic,</SourceLine>
   <SourceLine>// so passing a new value as a String</SourceLine>
   <SourceLine>// operates using ByVal logic.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Pass this request off to a more</SourceLine>
   <SourceLine>// specific function.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If newValue.mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue newValue.mySwapFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf newValue.myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue newValue.myOriginalFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf newValue.UserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Clear</SourceLine>
   <SourceLine>myUserEnteredPath = newValue.UserEnteredPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue newValue.myStringCopy</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newValue As BigStringKFS</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ModifyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ModifyValue(newValue As MemoryBlock)</SourceLine>
   <SourceLine>// Grabs the current data stream, and overwrites</SourceLine>
   <SourceLine>// it with the data in the given MemoryBlock.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// The data in the MemoryBlock is imported</SourceLine>
   <SourceLine>// into this instance using ByRef logic.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Currently, this class' support of BinaryStreams</SourceLine>
   <SourceLine>// and MemoryBlocks only includes accepting</SourceLine>
   <SourceLine>// data.  Because of this, they behave like</SourceLine>
   <SourceLine>// Strings do in this class.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue New BinaryStream( newValue )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newValue As MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ModifyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ModifyValue(newValue As FolderItem)</SourceLine>
   <SourceLine>// Grabs the current data stream, and overwrites</SourceLine>
   <SourceLine>// it with the data in the given FolderItem.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// The data in the FolderItem is imported</SourceLine>
   <SourceLine>// into this instance using ByRef logic.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ModifyValue BinaryStream.Open( newValue )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newValue As FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ModifyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ModifyValue(newValue As BinaryStream)</SourceLine>
   <SourceLine>// Grabs the current data stream, and overwrites</SourceLine>
   <SourceLine>// it with the data in the given BinaryStream.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/25/2009 by Andrew Keller</SourceLine>
   <SourceLine>// Modified 1/8/2010 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// The data in the BinaryStream is imported</SourceLine>
   <SourceLine>// into this instance using ByRef logic.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Currently, this class' support of BinaryStreams</SourceLine>
   <SourceLine>// and MemoryBlocks only includes accepting</SourceLine>
   <SourceLine>// data.  Because of this, they behave like</SourceLine>
   <SourceLine>// Strings do in this class.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// See if we can modify the original folderitem.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim outStream As BinaryStream</SourceLine>
   <SourceLine>outStream = BinaryStream.Create( myOriginalFolderitem, True )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If outStream &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Write newValue.Read( newValue.Length, FileTextEncoding )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Guess not.  Oh well.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>StringValue = newValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newValue As BinaryStream</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringDataInvolvesAbstractFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringDataInvolvesAbstractFile() As Boolean</SourceLine>
   <SourceLine>// Returns whether or not this data stream in</SourceLine>
   <SourceLine>// this instance uses an abstract file.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/26/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (swap)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// User data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Abstract data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (memory)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>StringDataInvolvesUserFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringDataInvolvesUserFile() As Boolean</SourceLine>
   <SourceLine>// Returns whether or not this data stream in</SourceLine>
   <SourceLine>// this instance uses a file in the user scope.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/26/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (swap)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// User data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Abstract data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (memory)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>StringDataInvolvesInternalData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringDataInvolvesInternalData() As Boolean</SourceLine>
   <SourceLine>// Returns whether or not this data stream in</SourceLine>
   <SourceLine>// this instance uses data stored internally.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/26/2009 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mySwapFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (swap)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myOriginalFolderitem &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// User data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf myUserEnteredPath &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Abstract data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Internal data (memory)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDataFolderitem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDataFolderitem(allowAccessToSwapFile As Boolean = False) As FolderItem</SourceLine>
   <SourceLine>// Returns the folderitem that contains this instance's data,</SourceLine>
   <SourceLine>// only if the data is represented by a file in the user scope.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 12/26/2009 by Andrew Keller</SourceLine>
   <SourceLine>// Modified 1/8/2010 --;</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Note: There are plenty of legitimate cases</SourceLine>
   <SourceLine>// where this function may return Nil.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If allowAccessToSwapFile And mySwapFolderitem &lt;&gt; Nil Then Return mySwapFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return myOriginalFolderitem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>allowAccessToSwapFile As Boolean = False</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>ForceStringDataToDisk</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ForceStringDataToDisk()</SourceLine>
   <SourceLine>// Relocates the data segment of this instance to a swap</SourceLine>
   <SourceLine>// file if it is currently in memory.  Has no effect if</SourceLine>
   <SourceLine>// the segment is currently a file in the user-scope or</SourceLine>
   <SourceLine>// is inaccessible.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 1/8/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If myOriginalFolderitem = Nil And mySwapFolderitem = Nil And myUserEnteredPath = "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim currentData As BinaryStream = GetDataStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If currentData &lt;&gt; Nil Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Send the current data to a swap file.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mySwapFolderitem = AcquireSwapFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim outStream As BinaryStream</SourceLine>
   <SourceLine>outStream = BinaryStream.Create( mySwapFolderitem, True )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Write currentData.Read( currentData.Length, FileTextEncoding )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outStream.Length = currentData.Length</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>currentData.Close</SourceLine>
   <SourceLine>outStream.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear the other references.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>myStringCopy = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Convert() As String</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 1/13/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return StringValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Convert() As BinaryStream</SourceLine>
   <SourceLine>// Overloads the equals operator.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Created 1/13/2010 by Andrew Keller</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return GetDataStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// done.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>BinaryStream</ItemResult>
 </Method>
 <Property>
  <ItemName>myOriginalFolderitem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myOriginalFolderitem As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myOriginalFolderitem As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>myStringCopy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myStringCopy As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myStringCopy As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mySwapFolderitem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mySwapFolderitem As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mySwapFolderitem As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>FileTextEncoding</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FileTextEncoding As TextEncoding</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FileTextEncoding As TextEncoding</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>myUserEnteredPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myUserEnteredPath As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myUserEnteredPath As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>iErrCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iErrCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iErrCode As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iErrCode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kUIDCat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kUIDCat</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>BigStringKFS Pool Entry UID</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kErrCodeDoesntExist</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kErrCodeDoesntExist</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kErrCodeNone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kErrCodeNone</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>0</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kDataSourceMemory</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kDataSourceMemory</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>Loaded in Memory</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kDataSourceMissing</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kDataSourceMissing</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>File Data is Missing</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kErrCodeAbstractFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kErrCodeAbstractFile</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>2</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kErrCodeIOError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kErrCodeIOError</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>3</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kSwapThreshold</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kSwapThreshold</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>1000000</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
</RBProject>
